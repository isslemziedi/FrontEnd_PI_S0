name: Frontend CI for Next.js

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.19.1'  # Specify the Node.js version

      - name: Install Dependencies
        working-directory: ./nextjs_front-master  # Pointing to nextjs_front-master where package.json is located
        run: npm install

      - name: Build Next.js App
        working-directory: ./nextjs_front-master  # Pointing to nextjs_front-master for build
        run: npm run build

      - name: Debug EC2 Variables
        run: |
          if [ -z "${{ secrets.EC2_SSH_KEY }}" ]; then echo "SSH_PRIVATE_KEY is not set"; else echo "SSH_PRIVATE_KEY is set"; fi
          echo "EC2_HOST is: ${{ secrets.EC2_HOST }}"
          echo "EC2_USER is: ${{ secrets.EC2_USER }}"
          echo "Checking if variables are empty..."
          if [ -z "${{ secrets.EC2_HOST }}" ]; then echo "EC2_HOST is not set"; fi
          if [ -z "${{ secrets.EC2_USER }}" ]; then echo "EC2_USER is not set"; fi

      - name: Deploy to EC2 (Frontend)
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          echo "Attempting to connect to $EC2_HOST"
          scp -o StrictHostKeyChecking=no -i private_key.pem -r ./nextjs_front-master/* $EC2_USER@$EC2_HOST:/path/to/your/nextjs-frontend
          ssh -o StrictHostKeyChecking=no -i private_key.pem $EC2_USER@$EC2_HOST "cd /path/to/your/nextjs-frontend && npm install && npm run start"
